@{
    ViewData["Title"] = "Home page";
    var themesdialogPosition = new Syncfusion.EJ2.Popups.DialogPositionData{
        X="right", Y= "112"
    };
    var asyncSettings = new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = "https://ej2.syncfusion.com/services/api/uploadbox/Save", RemoveUrl = "https://ej2.syncfusion.com/services/api/uploadbox/Remove" };
}

<ejs-contextmenu id='arrangeContextMenu' 
    items='ViewBag.arrangemenuitems' onOpen="arrangeContextMenuOpen" animationSettings="@new Syncfusion.EJ2.Navigations.ContextMenuAnimationSettings(){Effect= Syncfusion.EJ2.Navigations.MenuEffect.None }" cssClass="arrangeMenu" 
    select="contextMenuClick" beforeClose="arrangeMenuBeforeClose" >
</ejs-contextmenu>

<div class='diagrambuilder-container' style="display: none;">
    <div class='header navbar'>
        <div class="db-header-container">
            <div class="db-diagram-name-container">
                <span id='diagramName' style="width:250px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" class="db-diagram-name"
                    onclick="renameDiagram(event)">Untitled Diagram</span>
                <input id='diagramEditable' type="text" class="db-diagram-name" onkeydown="diagramNameKeyDown(event)" onfocusout= "diagramNameChange(event)" />
                <span id='diagramreport' class="db-diagram-name db-save-text"></span>
            </div>
            <div class='db-menu-container'>
                <div class="db-menu-style">
                    <ejs-dropdownbutton  id="btnFileMenu" cssClass='db-dropdown-menu' content="File" items="ViewBag.filemenuitems"
                            select="menuClick" beforeItemRender="beforeItemRender" beforeOpen="arrangeMenuBeforeOpen"
                            beforeClose="arrangeMenuBeforeClose">
                    </ejs-dropdownbutton>
                </div>
                <div class="db-menu-style">
                    <ejs-dropdownbutton id="btnEditMenu"  cssClass='db-dropdown-menu' items="ViewBag.editmenuitems" select="menuClick"
                            content="Edit" beforeItemRender="beforeItemRender" beforeOpen="arrangeMenuBeforeOpen"
                            beforeClose="arrangeMenuBeforeClose">
                    </ejs-dropdownbutton>
                </div>
                <div class="db-menu-style">
                    <ejs-dropdownbutton id="btnViewMenu" cssClass='db-dropdown-menu' items="ViewBag.viewmenuitems"
                            content="View" select="menuClick" beforeItemRender="beforeItemRender" beforeOpen="arrangeMenuBeforeOpen"
                            beforeClose="arrangeMenuBeforeClose">
                    </ejs-dropdownbutton>
                </div>
                <div class="db-menu-style">
                    <ejs-dropdownbutton id="btnArrangeMenu" cssClass='db-dropdown-menu'  target='.e-contextmenu-wrapper.arrangeMenu' content="Arrange"
                            select="menuClick" beforeItemRender="beforeItemRender" beforeOpen="arrangeMenuBeforeOpen"
                            beforeClose="arrangeMenuBeforeClose">
                    </ejs-dropdownbutton>
                </div>
                <div class="db-menu-style">
                    <ejs-dropdownbutton id="btnWindowMenu" cssClass='db-dropdown-menu' items='ViewBag.windowmenuitems'
                            content="Window" select="menuClick" beforeItemRender="beforeItemRender" beforeOpen="arrangeMenuBeforeOpen"
                            beforeClose="arrangeMenuBeforeClose">
                    </ejs-dropdownbutton >
                </div>
                <div class="db-menu-style" style="display: none">
                    <ejs-dropdownbutton id="btnHelpMenu" cssClass='db-dropdown-menu'items='ViewBag.helpmenuitems'
                            content="Edit" select="menuClick" beforeItemRender="beforeItemRender" beforeOpen="arrangeMenuBeforeOpen"
                            beforeClose="arrangeMenuBeforeClose">
                    </ejs-dropdownbutton >
                </div>
            </div>
        </div>
        <div class='db-toolbar-editor'>
            <div class='db-toolbar-container '>
                 <div id="toolbarEditor"></div>
            </div>
            <div class="db-toolbar-hide-btn">
                <ejs-button id="btnHideToolbar" iconCss='sf-icon-Collapse tb-icons'>
                </ejs-button>
            </div>
        </div>
    </div>
   <div class='row content'>
        <div class='sidebar show-overview'>
            <div class="db-palette-parent">
                <ejs-symbolpalette id="symbolpalette"  width="100%" height="100%" symbolHeight="50" symbolWidth="50" expandMode="@ViewBag.expandMode" 
                    getSymbolInfo="@ViewBag.getSymbolInfo" palettes="@ViewBag.palettes" symbolPreview="@ViewBag.preview" symbolMargin= "@ViewBag.margin" enableSearch="@ViewBag.enableSearch"
                    getNodeDefaults="@ViewBag.setPaletteNodeDefaults">
                </ejs-symbolpalette>
            </div>
            <div class="db-overview-parent">
                <div id="overview"></div>
            </div>
            <div id="moreShapesDiv" class="db-palette-more-shapes">
                <div id='overviewspan' class="db-overview">
                    <span></span>
                </div>
                <div class="db-palette-more-shapes-text" onclick="moreShapesClick()">More Shapes</div>
            </div>
        </div>
        <div class='main-content' role='main'>
            <div class="db-diagram-container">
                <div id="diagramContainerDiv" class='db-current-diagram-container' >
                    <ejs-diagram id="diagram"  width="100%" height="100%" backgroundColor="transparent" selectionChange="DiagramClientSideEvents.prototype.selectionChange" 
                        rotateChange="DiagramClientSideEvents.prototype.nodeRotationChange" contextMenuOpen="DiagramClientSideEvents.prototype.diagramContextMenuOpen" 
                        contextMenuClick="contextMenuClick" positionChange="DiagramClientSideEvents.prototype.nodePositionChange"  sizeChange="DiagramClientSideEvents.prototype.nodeSizeChange"
                        dragEnter="DiagramClientSideEvents.prototype.dragEnter" historyChange="DiagramClientSideEvents.prototype.historyChange" scrollChange="DiagramClientSideEvents.prototype.scrollChange"
                        collectionChange="collectionChange"  drop="drop" textEdit="DiagramClientSideEvents.prototype.textEdit" keyDown="DiagramClientSideEvents.prototype.keyDown"  getCustomTool="@ViewBag.getTool" getNodeDefaults="@ViewBag.getNodeDefaults" getConnectorDefaults="@ViewBag.getConnectorDefaults"> 
                       <e-diagram-commandmanager commands="@ViewBag.commands"></e-diagram-commandmanager>
                        <e-diagram-snapsettings constraints="ShowLines" horizontalGridlines="ViewBag.gridLines" verticalGridlines="ViewBag.gridLines" >
                        </e-diagram-snapsettings>
                        <e-diagram-pagesettings width="816" height="1056" multiplePage="true">
                            <e-pagesettings-background  color= 'white' ></e-pagesettings-background>
                            <e-pagesettings-margin left="5" top="5"></e-pagesettings-margin>
                        </e-diagram-pagesettings>
                        <e-diagram-scrollsettings canAutoScroll= "true" minZoom= "0.25" maxZoom= "30" scrollLimit="Infinity"></e-diagram-scrollsettings>
                        <e-diagram-selecteditems  constraints="All"></e-diagram-selecteditems>
                        <e-diagram-contextmenusettings show="true" items="ViewBag.item" ></e-diagram-contextmenusettings> 
                    </ejs-diagram>
                </div>
                <div class="db-more-diagram-options-container">
                    <div id="pageOptionList">
                    </div>
                </div>
            </div>
            <div class='db-property-editor-container' style="overflow:auto;">
                <div id="generalDiagramContainer" class="db-general-diagram-prop-container">
                    <div id='diagramPropertyContainer' class="db-diagram-prop-container">
                        <div class="row db-prop-header-text">
                            Page Settings
                        </div>
                        <div class="row db-prop-row">
                            <ejs-dropdownlist id="pageSettingsList" dataSource="ViewBag.paperList" change="DiagramPropertyBinding.prototype.paperListChange"
                                index="0" >
                                 <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                        <div class="row db-prop-row" id="pageOrientation">
                            <div class="col-xs-3 db-prop-col-style" style="margin-right: 8px;width: 30%;">
                                <ejs-radiobutton id="pagePortrait" label="Portrait" name="pageSettings" checked="false"
                                    change="DiagramPropertyBinding.prototype.pageOrientationChange"></ejs-radiobutton>
                            </div>
                            <div class="col-xs-3 db-prop-col-style">
                                <ejs-radiobutton id="pageLandscape" label="Landscape" name="pageSettings" checked="true"
                                    change="DiagramPropertyBinding.prototype.pageOrientationChange"></ejs-radiobutton>
                            </div>
                        </div>
                        <div class="row db-prop-row" id='pageDimension' style="display:none">
                            <div class="col-xs-6 db-col-left">
                                <div class="db-text-container">
                                    <div class="db-text">
                                        <span>W</span>
                                    </div>
                                    <div class="db-text-input">
                                        <ejs-numerictextbox id="pageWidth" min="100" format="n0" change="DiagramPropertyBinding.prototype.pageDimensionChange" value="1056"></ejs-numerictextbox>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-6 db-col-right">
                                <div class="db-text-container">
                                    <div class="db-text">
                                        <span>H</span>
                                    </div>
                                    <div class="db-text-input">
                                        <ejs-numerictextbox id="pageHeight" min="100" format="n0" change="DiagramPropertyBinding.prototype.pageDimensionChange" value="816"></ejs-numerictextbox>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-6 db-col-left">
                                <div class="db-color-container">
                                    <div class="db-color-input">
                                        <ejs-colorpicker id="pageBgColor" type="color" value="#fff" showButtons="false" mode="Palette" width="100%" change="DiagramPropertyBinding.prototype.pageBackgroundChange1">
                                        </ejs-colorpicker>
                                    </div>
                                    <div class="db-color-btn">
                                        <ejs-button id="pageBgColorPickerBtn" iconCss='sf-icon-ColorPickers tb-icons'>
                                        </ejs-button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <ejs-checkbox id='showPageBreaks' label="Page Breaks" change='DiagramPropertyBinding.prototype.pageBreaksChange'>
                            </ejs-checkbox>
                        </div>
                    </div>
                    <div id='nodePropertyContainer' class="db-node-prop-container" style="display:none">
                        <div class="db-node-behaviour-prop">
                            <div class="row db-prop-header-text">
                                Dimensions
                            </div>
                            <div class="row db-prop-row">
                                <div class="col-xs-6 db-col-left">
                                    <div class="db-text-container">
                                        <div class="db-text">
                                            <span>X</span>
                                        </div>
                                        <div class="db-text-input">
                                        <ejs-numerictextbox id="nodeOffsetX" format="n0" change="nodeoffsetXchange"></ejs-numerictextbox>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 db-col-right">
                                    <div class="db-text-container">
                                        <div class="db-text">
                                            <span>Y</span>
                                        </div>
                                        <div class="db-text-input">
                                            <ejs-numerictextbox id="nodeOffsetY" format="n0" change="nodeoffsetYchange"></ejs-numerictextbox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row db-prop-row">
                                <div class="col-xs-6 db-col-left">
                                    <div class="db-text-container">
                                        <div class="db-text">
                                            <span>W</span>
                                        </div>
                                        <div class="db-text-input">
                                            <ejs-numerictextbox id="nodeWidth" min="1" format="n0" change="nodewidthchange"></ejs-numerictextbox>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 db-col-right">
                                    <div class="db-text-container">
                                        <div class="db-text">
                                            <span>H</span>
                                        </div>
                                        <div class="db-text-input">
                                            <ejs-numerictextbox id="nodeHeight" min="1" format="n0" change="nodeheightchange"></ejs-numerictextbox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row db-prop-row">
                                <div class="col-xs-6 db-col-left">
                                    <ejs-checkbox id='aspectRatio' label="Aspect Ratio" checked="false" change="nodeaspectratiochange"></ejs-checkbox>
                                </div>
                            </div>
                            <div class="row db-prop-row">
                                <div class="col-xs-6 db-col-left">
                                    <span class="db-prop-text-style">Rotate</span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-6 db-col-left">
                                    <div class="db-text-container">
                                        <div class="db-text">
                                            <ejs-button id="rotateIconBtn" iconCss='sf-icon-Rotate1 tb-icons'>
                                            </ejs-button>
                                        </div>
                                        <div class="db-text-input">
                                            <ejs-numerictextbox id="nodeRotateAngle" format="n0" change="noderotationchange"></ejs-numerictextbox>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="db-prop-separator">
                            </div>
                            <div class="row db-prop-header-text">
                                Insert
                            </div>
                            <div class="row db-prop-row">
                                <div class="col-xs-6 db-col-left">
                                    <ejs-toolbar id='toolbarNodeInsert' clicked="toolbarInsertClick" overflowMode='Scrollable'>
                                        <e-toolbar-items>
                                            <e-toolbar-item prefixIcon="sf-icon-InsertLink tb-icons" tooltipText="Insert Link" cssClass="tb-item-start">
                                            </e-toolbar-item>
                                            <e-toolbar-item prefixIcon="sf-icon-InsertImage tb-icons" tooltipText="Insert Image" cssClass="tb-item-end">
                                            </e-toolbar-item>
                                        </e-toolbar-items>
                                    </ejs-toolbar>
                                </div>
                            </div>
                            <div class="db-prop-separator">
                            </div>
                        </div>
                        <div id='nodeStyleProperties' class="db-node-style-prop">
                            <div class="row db-background-style">
                                <div class="row db-prop-header-text">
                                    Background and Border Styles
                                </div>
                                <div class="row db-prop-row">
                                    <div class="col-xs-6 db-col-left">
                                        <div class="db-color-container">
                                            <div class="db-color-input">
                                                <ejs-colorpicker id="nodeFillColor" type="color" mode="Palette" showButtons="false" change="nodecolorchange"></ejs-colorpicker>
                                            </div>
                                            <div class="db-color-btn">
                                                <ejs-button id="fillColorIconBtn" iconCss='sf-icon-ColorPickers tb-icons'>
                                                </ejs-button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id='gradientStyle' class="row db-prop-row db-gradient-style-hide">
                                    <div class="col-xs-4 db-col-left">
                                        <ejs-checkbox id='gradient' label="Gradient" change="nodegradientchange"></ejs-checkbox>
                                    </div>
                                    <div class="col-xs-4 db-col-center">
                                        <ejs-dropdownlist id='gradientDirectionDropdown' dataSource="ViewBag.gradientDirections"
                                             popupWidth='200px' change="nodegradientdirectionchange" index=0>
                                        <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                        </ejs-dropdownlist>
                                    </div>
                                    <div class="col-xs-4 db-col-right">
                                        <div class="db-color-container">
                                            <div class="db-color-input">
                                                <ejs-colorpicker  id="nodeGradientColor" type="color" mode="Palette" showButtons="false" change="nodegradientcolorchange" value="#fff">
                                                </ejs-colorpicker>
                                            </div>
                                            <div class="db-color-btn">
                                                <ejs-button id="gradientColorIconBtn" iconCss='sf-icon-ColorPickers tb-icons'>
                                                </ejs-button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row db-border-style">
                                <div class="row db-prop-header-text db-border-style-header">
                                    Border/Line Styles
                                </div>
                                <div class="row db-prop-row">
                                    <div class="col-xs-4 db-col-right">
                                        <span class="db-prop-text-style">Stroke Color</span>
                                    </div>
                                    <div class="col-xs-4 db-col-center">
                                        <span class="db-prop-text-style">Stroke Style</span>
                                    </div>
                                    <div class="col-xs-4 db-col-left">
                                        <span class="db-prop-text-style">Stroke Width</span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-4 db-col-left">
                                        <div class="db-color-container">
                                            <div class="db-color-input">
                                                <ejs-colorpicker id="nodeStrokeColor" type="color" mode="Palette" showButtons="false" change="nodestrokecolorchange">
                                                </ejs-colorpicker>
                                            </div>
                                            <div class="db-color-btn">
                                                <ejs-button id="strokeColorIconBtn" iconCss='sf-icon-Pickers tb-icons'>
                                                </ejs-button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xs-4 db-col-center">
                                        <ejs-dropdownlist id="nodeBorderStyle" dataSource="ViewBag.borderStyles"
                                            popupWidth='160px' change="nodeborderchange" itemTemplate='<div class="db-ddl-template-style"><span class="${className}"></span></div>'
                                            valueTemplate='<div class="db-ddl-template-style"><span class="${className}"></span></div>'>
                                            <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                        </ejs-dropdownlist>
                                    </div>
                                    <div class="col-xs-4 db-col-right">
                                        <ejs-numerictextbox id="nodeStrokeWidth" min="0" step="0.5" change="nodestrokewidthchange"></ejs-numerictextbox>
                                    </div>
                                </div>
                                <div class="row db-prop-row">
                                    <div class="col-xs-2 db-col-right db-prop-text-style" style="padding-top: 6px">
                                        <span class="db-prop-text-style">Opacity</span>
                                    </div>
                                    <div class="col-xs-8 db-col-left" style="padding-right:10px">
                                        <ejs-slider id='nodeOpacitySlider' min='0' max='100' step='10' type='MinRange' value="0" change="nodeOpacitySliderchange">
                                        </ejs-slider>
                                    </div>
                                    <div class="col-xs-2 db-col-right">
                                        <input id="nodeOpacitySliderText" type="text" value="100%" readOnly="true" class="db-readonly-input" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id='connectorPropertyContainer' class="db-connector-prop-container" style="display:none">
                        <div class="row db-prop-header-text">
                            Connector Properties
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-6 db-col-left db-prop-text-style">
                                <span class="db-prop-text-style">Connector Type</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-6 db-col-left">
                                <ejs-dropdownlist id="lineTypeDropdown" change="lineTypeDropdownchange" dataSource="ViewBag.lineTypes">
                                    <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-6 db-col-left">
                                <div class="db-color-container">
                                    <div class="db-color-input">
                                          <ejs-colorpicker id="lineColor" mode="Palette" type="color" showButtons="false" change="lineColorchange">
                                        </ejs-colorpicker>
                                    </div>
                                    <div class="db-color-btn">
                                         <ejs-button id="lineColorIconBtn" iconCss='sf-icon-Pickers tb-icons'>
                                        </ejs-button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-8 db-col-left db-prop-text-style">
                                <span class="db-prop-text-style">Stroke Style</span>
                            </div>
                            <div class="col-xs-4 db-col-right db-prop-text-style">
                                <span class="db-prop-text-style">Thickness</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-8 db-col-left">
                                <ejs-dropdownlist id="lineStyle" dataSource="ViewBag.borderStyles" change="lineStylechange"  itemTemplate='<div class="db-ddl-template-style"><span class="${className}"></span></div>'
                                  valueTemplate='<div class="db-ddl-template-style"><span class="${className}"></span></div>'>
                                    <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                            <div class="col-xs-4 db-col-right">
                                <ejs-numerictextbox min="0.5" step="0.5" id="lineWidth" change="lineWidthchange"></ejs-numerictextbox>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-8 db-col-left db-prop-text-style">
                                <span class="db-prop-text-style">Start Arrow</span>
                            </div>
                            <div class="col-xs-4 db-col-right db-prop-text-style">
                                <span class="db-prop-text-style">Size</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-8 db-col-left">
                                <ejs-dropdownlist id="sourceType" dataSource="ViewBag.decoratorList" change="sourceTypechange">
                                    <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                            <div class="col-xs-4 db-col-right">
                                <ejs-numerictextbox min="1" step="1" id="sourceSize" change="sourceSizechange"></ejs-numerictextbox>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-8 db-col-left db-prop-text-style">
                                <span class="db-prop-text-style">End Arrow</span>
                            </div>
                            <div class="col-xs-4 db-col-right db-prop-text-style">
                                <span class="db-prop-text-style">Size</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-8 db-col-left">
                                 <ejs-dropdownlist id="targetType" dataSource="ViewBag.decoratorList" change="targetTypechange">
                                <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                            <div class="col-xs-4 db-col-right">
                                   <ejs-numerictextbox min="1" step="1" id="targetSize" change="targetSizechange"></ejs-numerictextbox>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-8 db-col-left" style="margin-top:5px">
                                <ejs-checkbox id='lineJump' label="Bridging" checked="false" change="lineJumpchange"></ejs-checkbox>
                            </div>
                            <div class="col-xs-4 db-col-right" id="lineJumpSizeDiv" style="display:none">
                                <ejs-numerictextbox min="1" step="1" id="lineJumpSize" change="lineJumpSizechange"></ejs-numerictextbox>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <ejs-checkbox id="SegmentEditing" checked="false" label="Segment Editing" change="SegmentEditing"></ejs-checkbox>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-2 db-col-right db-prop-text-style" style="padding-top: 6px">
                                <span class="db-prop-text-style">Opacity</span>
                            </div>
                            <div class="col-xs-8 db-col-left" style="padding-right:10px">
                                <ejs-slider id='default1' min='0' max='100' step='10' value="0" type='MinRange' change="connectoropacitychange">
                                </ejs-slider>
                            </div>
                            <div class="col-xs-2 db-col-right">
                                <input type="text" id="connectorOpacitySliderText" value="100%" readonly="true" class="db-readonly-input" />
                            </div>
                        </div>
                    </div>
                    <div id='textPropertyContainer' class="db-text-prop-container" style="display:none">
                        <div class="db-prop-separator">
                        </div>
                        <div class="row db-prop-header-text">
                            Text
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-8 db-col-left">
                                <ejs-dropdownlist id="fontFamily" height="34px" dataSource="ViewBag.fontFamilyList" change="fontFamilychange" index=0>
                                    <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                            <div class="col-xs-4 db-col-right">
                                <ejs-numerictextbox min="1" step="1" id="fontSizeTextProperties" change="fontSizechange"></ejs-numerictextbox>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-6 db-col-left" id="textPositionDiv">
                                <ejs-dropdownlist dataSource="ViewBag.textPosition" id="ddlTextPosition" 
                                 change="DiagramPropertyBinding.prototype.textPositionChange" >
                                    <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                            <div class="col-xs-6 db-col-right" id="textColorDiv">
                                <div class="db-color-container">
                                    <div class="db-color-input">
                                        <ejs-colorpicker id='textColor' mode="Palette" type="color" showButtons="false" change="fontColorchange" value="#000000">
                                        </ejs-colorpicker>
                                    </div>
                                    <div class="db-color-btn">
                                        <ejs-button id="fontColorBtn" iconCss='sf-icon-ColorPickers tb-icons'>
                                        </ejs-button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row db-prop-row">
                            <div >
                                <ejs-toolbar id='toolbarTextStyle' overflowMode='Scrollable' clicked="DiagramPropertyBinding.prototype.toolbarTextStyleChange">
                                    <e-toolbar-items>
                                        <e-toolbar-item prefixIcon="sf-icon-Bold tb-icons" tooltipText="Bold" cssClass="tb-item-start">
                                        </e-toolbar-item>
                                        <e-toolbar-item prefixIcon="sf-icon-Italic tb-icons" tooltipText="Italic" cssClass="tb-item-middle">
                                        </e-toolbar-item>
                                        <e-toolbar-item prefixIcon="sf-icon-Underline tb-icons" tooltipText="Underline" cssClass="tb-item-end">
                                        </e-toolbar-item>
                                    </e-toolbar-items>
                                </ejs-toolbar>
                            </div>
                            <div >
                                <ejs-toolbar id='toolbarTextSubAlignment' overflowMode='Scrollable' clicked="DiagramPropertyBinding.prototype.toolbarTextSubAlignChange">
                                    <e-toolbar-items>
                                        <e-toolbar-item prefixIcon="sf-icon-ParaAlignLeft tb-icons" tooltipText="Align Text Left" cssClass="tb-item-start">
                                        </e-toolbar-item>
                                        <e-toolbar-item prefixIcon="sf-icon-ParaAlignCenter tb-icons" tooltipText="Align Text Center" cssClass="tb-item-middle">
                                        </e-toolbar-item>
                                        <e-toolbar-item prefixIcon="sf-icon-ParaAlignRight tb-icons" tooltipText="Align Text Right" cssClass="tb-item-end">
                                        </e-toolbar-item>
                                    </e-toolbar-items>
                                </ejs-toolbar>
                            </div>
                        </div>
                        <div class="row db-prop-row" id='toolbarTextAlignmentDiv'>
                            <ejs-toolbar id='toolbarTextAlignment' overflowMode='Scrollable' clicked="DiagramPropertyBinding.prototype.toolbarTextAlignChange">
                                <e-toolbar-items>
                                    <e-toolbar-item prefixIcon="sf-icon-TextLeft tb-icons" tooltipText="Align Right" cssClass="tb-item-start">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-TextVerticalCenter tb-icons" tooltipText="Align Center" cssClass="tb-item-middle">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-TextRight tb-icons" tooltipText="Align Left" cssClass="tb-item-middle">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-TextTop tb-icons" tooltipText="Align Bottom" cssClass="tb-item-middle">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-TextHorizontalCenter tb-icons" tooltipText="Align Middle" cssClass="tb-item-middle">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-TextBottom tb-icons" tooltipText="Align Top" cssClass="tb-item-end">
                                    </e-toolbar-item>
                                </e-toolbar-items>
                            </ejs-toolbar>
                        </div>
                        <div class="row db-prop-row">
                            <div class="col-xs-2 db-col-right db-prop-text-style" style="padding-top: 6px">
                                <span class="db-prop-text-style">Opacity</span>
                            </div>
                            <div class="col-xs-8 db-col-left" style="padding-right:10px">
                                <ejs-slider id="opacityTextSlider" min='0' max='100' step='10' value="0" type='MinRange' change="textopacitychange">
                                </ejs-slider>
                            </div>
                            <div class="col-xs-2 db-col-right">
                                <input id='textOpacityText' type="text" value="100%" class="db-readonly-input" readOnly="true"/>
                            </div>
                        </div>
                    </div>
                </div>
                <div id='mindMapContainer' class="db-mindmap-prop-container">
                    <div class="row db-prop-header-text">
                        MindMap Pattern
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="MindMapPropertyBinding.prototype.mindmapPatternChange(event)" class="mindmap-pattern-style mindmap-pattern1"></div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="MindMapPropertyBinding.prototype.mindmapPatternChange(event)" class="mindmap-pattern-style mindmap-pattern2"></div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="margin-top:5px">
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="MindMapPropertyBinding.prototype.mindmapPatternChange(event)" class="mindmap-pattern-style mindmap-pattern3"></div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="MindMapPropertyBinding.prototype.mindmapPatternChange(event)" class="mindmap-pattern-style mindmap-pattern4"></div>
                        </div>
                    </div>
                    <div class="db-prop-separator">
                    </div>
                    <div class="row db-prop-header-text">
                        MindMap Levels Styles
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 db-col-left">
                            <ejs-dropdownlist id="mindMapLevels" dataSource="ViewBag.mindmapLevels" change="mindMapLevelschange" index=0>
                            <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </div>
                    <div id='mindMapFill' class="row db-prop-row">
                        <div class="col-xs-6 db-col-left">
                            <div class="db-color-container">
                                <div class="db-color-input">
                                    <ejs-colorpicker id='mindmapFill' mode="Palette" showButtons="false" change="mindmapFillchange" type="color">
                                    </ejs-colorpicker>
                                </div>
                                <div class="db-color-btn">
                                    <ejs-button id="mindmapFillIconBtn" iconCss='sf-icon-ColorPickers tb-icons'>
                                    </ejs-button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-4 db-col-left">
                            <div class="db-color-container">
                                <div class="db-color-input">
                                    <ejs-colorpicker id='mindmapStroke' mode="Palette" showButtons="false" change="mindmapStrokechange" type="color">
                                    </ejs-colorpicker>
                                </div>
                                <div class="db-color-btn">
                                    <ejs-button id="mindmapStrokeIconBtn" iconCss='sf-icon-Pickers tb-icons'>
                                    </ejs-button>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-4 db-col-center">
                            <ejs-dropdownlist id="strokeStyle" dataSource="ViewBag.borderStyles"
                                popupWidth='160px' change="strokeStylechange" itemTemplate= '<div class="db-ddl-template-style"><span class="${className}"></span></div>'
                                valueTemplate='<div class="db-ddl-template-style"><span class="${className}"></span></div>'>
                                  <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                        <div class="col-xs-4 db-col-right">
                            <ejs-numerictextbox id="mindmapStrokeWidth" min="0.5" step="0.5" change="mindmapStrokeWidthchange"></ejs-numerictextbox>
                        </div>
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-2 db-col-right db-prop-text-style" style="padding-top: 6px">
                            <span class="db-prop-text-style">Opacity</span>
                        </div>
                        <div class="col-xs-8 db-col-left" style="padding-right:10px">
                            <ejs-slider id="mindmapOpacitySlider" min='0' max='100' step='10' type='MinRange' change="mindmapOpacitySliderchange">
                            </ejs-slider>
                        </div>
                        <div class="col-xs-2 db-col-right">
                            <input type="text" readOnly="true" id="mindmapOpacityText" value="100%" class="db-readonly-input" />
                        </div>
                    </div>
                    <div style="margin-top:10px;margin-bottom: 15px"></div>
                    <div class="row db-prop-header-text">
                        Text Style
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-8 db-col-left">
                            <ejs-dropdownlist height='34px' dataSource="ViewBag.fontFamilyList" id="mindmapFontFamilyList" change="mindmapFontFamilyListchange" index=0>
                             <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                        <div class="col-xs-4 db-col-right">
                            <ejs-numerictextbox min="1" step="1" id="mindmapFontSize" change="mindmapFontSizechange"></ejs-numerictextbox>
                        </div>
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 db-col-left">
                            <ejs-toolbar id="mindmapTextStyleToolbar" overflowMode='Scrollable' clicked="MindMapPropertyBinding.prototype.mindmapTextStyleChange">
                                <e-toolbar-items>
                                    <e-toolbar-item prefixIcon="sf-icon-Bold tb-icons" tooltipText="Bold" cssClass="tb-item-start">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-Italic tb-icons" tooltipText="Italic" cssClass="tb-item-middle">
                                    </e-toolbar-item>
                                    <e-toolbar-item prefixIcon="sf-icon-Underline tb-icons" tooltipText="Underline" cssClass="tb-item-end">
                                    </e-toolbar-item>
                                </e-toolbar-items>
                            </ejs-toolbar>
                        </div>
                        <div class="col-xs-6 db-col-right" id="textColorDiv">
                            <div class="db-color-container">
                                <div class="db-color-input">
                                    <ejs-colorpicker  id='mindmapTextColor' mode="Palette" showButtons="false" type="color" change="mindmapTextColorchange">
                                    </ejs-colorpicker>
                                </div>
                                <div class="db-color-btn">
                                    <ejs-button id="textColorIconBtn" iconCss='sf-icon-ColorPickers tb-icons'>
                                    </ejs-button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-2 db-col-right db-prop-text-style" style="padding-top: 6px">
                            <span class="db-prop-text-style">Opacity</span>
                        </div>
                        <div class="col-xs-8 db-col-left" style="padding-right:10px">
                            <ejs-slider id="mindmapTextOpacitySlider" min='0' max='100' step='10' type='MinRange' change="mindmapTextOpacitySliderchange">
                            </ejs-slider>
                        </div>
                        <div class="col-xs-2 db-col-right">
                            <input type="text" id="textOpacity" value="100%" class="db-readonly-input" readOnly="true" />
                        </div>
                    </div>
                </div>
                <div id='orgChartContainer' class="db-orgchart-prop-container">
                    <div class="row db-prop-row db-prop-header-text">
                        Import
                    </div>
                    <div class="row db-prop-row" style="height:28px">
                        <ejs-button id="btnImportData" content="Import Data" cssClass="db-btn-primary" ></ejs-button>
                    </div>
                    <div class="db-prop-separator">
                    </div>
                    <div class="row db-prop-header-text">
                        OrgChart Settings
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 db-col-left">
                            <span class="db-prop-text-style">Horizontal Spacing</span>
                        </div>
                        <div class="col-xs-6 db-col-right">
                            <span class="db-prop-text-style">Vertical Spacing</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-6 db-col-left">
                            <ejs-numerictextbox id="orgHorizontalSpacing" min="25" step="1" format="n0" value="50" change="OrgChartPropertyBinding.prototype.orgChartSpacingChange"></ejs-numerictextbox>
                        </div>
                        <div class="col-xs-6 db-col-right">
                             <ejs-numerictextbox id="orgVerticalSpacing" min="25" step="1" format="n0" value="50" change="OrgChartPropertyBinding.prototype.orgChartSpacingChange"></ejs-numerictextbox>
                        </div>
                    </div>
                    <div class="row db-prop-row">
                         <ejs-toolbar id='orgChartAlignment' overflowMode='Scrollable' clicked="OrgChartPropertyBinding.prototype.orgChartAligmentChange">
                            <e-toolbar-items>
                                <e-toolbar-item prefixIcon="sf-icon-TextLeft tb-icons" tooltipText="Align Left" cssClass="tb-item-start">
                                </e-toolbar-item>
                                <e-toolbar-item prefixIcon="sf-icon-TextHorizontalCenter tb-icons" tooltipText="Align Center" cssClass="tb-item-middle">
                                </e-toolbar-item>
                                <e-toolbar-item prefixIcon="sf-icon-TextRight tb-icons" tooltipText="Align Right" cssClass="tb-item-middle">
                                </e-toolbar-item>
                                <e-toolbar-item prefixIcon="sf-icon-TextTop tb-icons" tooltipText="Align Top" cssClass="tb-item-middle">
                                </e-toolbar-item>
                                <e-toolbar-item prefixIcon="sf-icon-TextVerticalCenter tb-icons" tooltipText="Align Middle" cssClass="tb-item-middle">
                                </e-toolbar-item>
                                <e-toolbar-item prefixIcon="sf-icon-TextBottom tb-icons" tooltipText="Align Bottom" cssClass="tb-item-end">
                                </e-toolbar-item>
                            </e-toolbar-items>
                        </ejs-toolbar>
                    </div>
                    <div class="db-prop-separator">
                    </div>
                    <div class="row db-prop-row db-prop-header-text">
                        Orientation Styles
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="OrgChartPropertyBinding.prototype.layoutOrientationChange(event)" class="org-pattern-style org-pattern-1 vertical-alternate"
                                style="background-image: url('./css/assets/dbstyle/orgchart_images/org-pattern1.svg')">
                            </div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="OrgChartPropertyBinding.prototype.layoutOrientationChange(event)" class="org-pattern-style org-pattern-2 vertical-left"
                                style="background-image: url('./css/assets/dbstyle/orgchart_images/org-pattern2.svg')"></div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="margin-top:5px">
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="OrgChartPropertyBinding.prototype.layoutOrientationChange(event)" class="org-pattern-style org-pattern-3 vertical-right"
                                style="background-image: url('./css/assets/dbstyle/orgchart_images/org-pattern3.svg')"></div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="OrgChartPropertyBinding.prototype.layoutOrientationChange(event)" class="org-pattern-style org-pattern-4 horizontal-center"
                                style="background-image: url('./css/assets/dbstyle/orgchart_images/org-pattern4.svg')"></div>
                        </div>
                    </div>
                    <div class="row db-prop-row" style="margin-top:5px">
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="OrgChartPropertyBinding.prototype.layoutOrientationChange(event)" class="org-pattern-style org-pattern-5 horizontal-right"
                                style="background-image: url('./css/assets/dbstyle/orgchart_images/org-pattern5.svg');"></div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div onclick="OrgChartPropertyBinding.prototype.layoutOrientationChange(event)" class="org-pattern-style org-pattern-6 horizontal-left"
                                style="background-image: url('./css/assets/dbstyle/orgchart_images/org-pattern6.svg')"></div>
                        </div>
                    </div>
                    <div class="db-prop-separator">
                    </div>
                    <div class="row db-prop-header-text" >
                        OrgChart Templates
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 org-pattern-parent">
                            <div id="orgPattern1" onclick="OrgChartPropertyBinding.prototype.layoutPatternChange(event)" class="org-pattern-style"></div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div id="orgPattern2" onclick="OrgChartPropertyBinding.prototype.layoutPatternChange(event)" class="org-pattern-style"></div>
                        </div>
                    </div>
                    <div class="row db-prop-row">
                        <div class="col-xs-6 org-pattern-parent">
                            <div id="orgPattern3" onclick="OrgChartPropertyBinding.prototype.layoutPatternChange(event)" class="org-pattern-style"></div>
                        </div>
                        <div class="col-xs-6 org-pattern-parent">
                            <div id="orgPattern4" onclick="OrgChartPropertyBinding.prototype.layoutPatternChange(event)" class="org-pattern-style"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<ejs-dialog id="exportDialog" width='400px' header='Export Diagram' target='#target' isModal='true' 
     visible='false' showCloseIcon='true'>
        <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="@ViewBag.ExportButton" click="btnExportClick"></e-dialog-dialogbutton>
            <e-dialog-dialogbutton buttonModel="@ViewBag.CancelClick" click="btnCancelClick"></e-dialog-dialogbutton>
        </e-dialog-buttons>
     <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="exportDialogContent">
            <div class="row">
                <div class="row">
                    File Name
                </div>
                <div class="row db-dialog-child-prop-row">
                    <input type="text" id="exportfileName" value ="Untitled Diagram">
                </div>
            </div>
            <div class="row db-dialog-prop-row">
                <div class="col-xs-6 db-col-left">
                    <div class="row">
                        Format
                    </div>
                    <div class="row db-dialog-child-prop-row">
                        <ejs-dropdownlist id="exportFormat" dataSource="ViewBag.fileFormats" index=0>
                            <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                        </ejs-dropdownlist>
                    </div>
                </div>
                <div class="col-xs-6 db-col-right">
                    <div class="row">
                        Region
                    </div>
                    <div class="row db-dialog-child-prop-row">
                        <ejs-dropdownlist id="exportRegion" dataSource="ViewBag.diagramRegions" index=1>
                            <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                        </ejs-dropdownlist>
                    </div>
                </div>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>

<ejs-dialog id="printDialog" width='335px' header='Print Diagram' target='#target' isModal='true' visible='false' showCloseIcon='true'>
    <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="@ViewBag.PrintButton" click="btnPrintClick"></e-dialog-dialogbutton>
            <e-dialog-dialogbutton buttonModel="@ViewBag.CancelClick" click="btnCancelClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="printDialogContent">
            <div class="row">
                <div class="row">
                    Region
                </div>
                <div class="row db-dialog-child-prop-row">
                    <ejs-dropdownlist id="printRegionDropdown" dataSource="ViewBag.diagramRegions" index=1>
                    <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                </div>
            </div>
            <div class="row db-dialog-prop-row">
                <div class="row">
                    Print Settings
                </div>
                <div class="row db-dialog-child-prop-row">
                    <ejs-dropdownlist dataSource="ViewBag.paperList" id="printPaperSizeDropdown" index=0>
                     <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                </div>
            </div>
            <div id="printCustomSize" class="row db-dialog-prop-row" style="display:none; height: 28px;">
                <div class="col-xs-6 db-col-left">
                    <div class="db-text-container">
                        <div class="db-text">
                            <span>W</span>
                        </div>
                        <div class="db-text-input">
                            <ejs-numerictextbox id="printPageWidth" min="100" step="1" format="n0" ></ejs-numerictextbox>
                        </div>
                    </div>
                </div>
                <div class="col-xs-6 db-col-right">
                    <div class="db-text-container">
                        <div class="db-text">
                            <span>H</span>
                        </div>
                        <div class="db-text-input">
                            <ejs-numerictextbox id="printPageHeight" min="100" step="1" format="n0" ></ejs-numerictextbox>
                        </div>
                    </div>
                </div>
            </div>
            <div id="printOrientation" class="row db-dialog-prop-row" style="height: 28px; padding: 5px 0px;">
                <div class="col-xs-3 db-prop-col-style" style="margin-right: 8px;">
                    <ejs-radiobutton id='printPortrait' label="Portrait" name="printSettings" checked="true">
                    </ejs-radiobutton>
                </div>
                <div class="col-xs-3 db-prop-col-style">
                    <ejs-radiobutton id='printLandscape' label="Landscape" name="printSettings" checked="false">
                    </ejs-radiobutton>
                </div>
            </div>
            <div class="row db-dialog-prop-row" style="margin-top: 16px">
                <ejs-checkbox id='printMultiplePage' label="Scale to fit 1 page" checked="false" change="Printchange"></ejs-checkbox>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>

<ejs-dialog id="fileUploadDialog"  width='500px' height='485px' header='Upload File' target='#target'
    isModal="true"  showCloseIcon='true' allowDragging='true'
    visible='false'>
      <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-dialog-buttons>
        <e-dialog-dialogbutton buttonModel="@ViewBag.uplaodNext" click="btnUploadNext"></e-dialog-dialogbutton>
        <e-dialog-dialogbutton buttonModel="@ViewBag.CancelClick" click="btnCancelClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-content-template>
        <div id="uploadDialogContent" class="db-upload-content firstPage">
            <ejs-tooltip id="tooltip" beforeRender="onTooltipBeforeRender" created='tooltipCreated' position="RightCenter">
                <e-content-template>
                    <div id='uploadInformationDiv' class="row db-dialog-prop-row" style="margin-top: 0px;">
                        <div class="row">
                            <div class="row" style="font-size: 12px;font-weight: 500;color: black;">
                                <div class="db-info-text">
                                    Choose Format
                                </div>
                                <div class='db-format-type' style="display: none">
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <div class="col-xs-3 db-prop-col-style">
                                    <ejs-radiobutton id='csvFormat' label="csv" name="uploadFileFormat" checked="true" change='DownloadExampleFiles.prototype.downloadFormatChange'>
                                    </ejs-radiobutton>
                                </div>
                                <div class="col-xs-3 db-prop-col-style">
                                    <ejs-radiobutton id='xmlFormat' label="xml" name="uploadFileFormat" change='DownloadExampleFiles.prototype.downloadFormatChange'>
                                    </ejs-radiobutton>
                                </div>
                                <div class="col-xs-3 db-prop-col-style">
                                    <ejs-radiobutton id='jsonFormat' label="json" name="uploadFileFormat" change='DownloadExampleFiles.prototype.downloadFormatChange'>
                                    </ejs-radiobutton>
                                </div>
                            </div>
                        </div>
                        <div class="row db-dialog-prop-row" style="padding: 10px; background-color: #FFF7B5; border: 1px solid #FFF7B5">
                            <div class="db-info-parent" style="width: 10%; background-color:transparent; height: 60px;">
                            </div>
                            <div style="float:left; width: calc(90% - 5px)">
                                <ul style="padding-left: 25px; margin-bottom: 0px">
                                    <li style="margin-bottom: 5px">
                                        <span id="descriptionText1" style="color: #515151;font-size: 11px;line-height: 15px;">Make
                                            sure that the every column of your table has a header</span>
                                    </li>
                                    <li>
                                        <span id="descriptionText2" style="color: #515151;font-size: 11px;line-height: 15px;">Each
                                            employee should have a reporting person (except for top most employee of the organization)
                                            and it should be indicated by any field from your data source.</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="row db-dialog-prop-row">
                            <ejs-button id="btnDownloadFile" content='Download Example CSV' onclick="DownloadExampleFiles.prototype.downloadExampleFiles(event)">
                            </ejs-button>
                        </div>
                        <div class="row">
                            <div id="dropArea">
                                <span id="dropRegion" class="droparea"> Drop files here or
                                    <a href="" id="browseFile">
                                        <u>Browse</u>
                                    </a>
                                </span>
                                <ejs-uploader id='defaultfileupload' asyncSettings="@asyncSettings" success="onUploadSuccess" failure="onUploadFailure"
                                    progress="onUploadFileSelected" allowedExtensions='.csv'>
                                </ejs-uploader>
                            </div>
                        </div>
                    </div>
                    <div id='parentChildRelationDiv' class="row db-dialog-prop-row">
                        <div class="row db-dialog-child-prop-row" style="margin-top:20px">
                            <div class="row">
                                <div class="db-info-text">
                                    Employee Id
                                </div>
                                <div class='db-info-style db-employee-id'>
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <ejs-dropdownlist id="employeeId" change="OrgChartPropertyBinding.prototype.orgDropDownChange" >
                                <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                        </div>
                        <div class="row db-dialog-prop-row">
                            <div class="row">
                                <div class="db-info-text">
                                    Supervisor Id
                                </div>
                                <div class='db-info-style db-supervisor-id'>
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <ejs-dropdownlist id="superVisorId" change="OrgChartPropertyBinding.prototype.orgDropDownChange">
                                     <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                        </div>
                    </div>
                    <div id='moreInformationDiv' class="row db-dialog-prop-row">
                        <div id='bindingFields' class="row">
                            <div class="row">
                                <div class="db-info-text">
                                    Name
                                </div>
                                <div class='db-info-style db-nameField-id'>
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <ejs-dropdownlist id="orgNameField" change="OrgChartPropertyBinding.prototype.orgDropDownChange" >
                                     <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                    </ejs-dropdownlist>
                            </div>
                        </div>
                        <div id='bindingFields' class="row db-dialog-prop-row" style="margin-top:20px">
                            <div class="row">
                                <div class="db-info-text">
                                    Binding Fields
                                </div>
                                <div class='db-info-style db-bindingField-id'>
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <ejs-multiselect id="orgBindingFields" change="OrgChartPropertyBinding.prototype.orgMultiSelectChange" 
                                    mode='Delimiter' >
                                     <e-multiselect-fields value="value" text="text"></e-multiselect-fields>
                                </ejs-multiselect>
                            </div>
                        </div>
                        <div id='imageFields' class="row db-dialog-prop-row">
                            <div class="row">
                                <div class="db-info-text">
                                    Image Field
                                </div>
                                <div class='db-info-style db-imageField-id'>
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <ejs-dropdownlist id="orgImageField" change="OrgChartPropertyBinding.prototype.orgDropDownChange" >
                                   <e-dropdownlist-fields text="text" value="value"></e-dropdownlist-fields>
                                </ejs-dropdownlist>
                            </div>
                        </div>
                        <div id='additionalFields' class="row db-dialog-prop-row">
                            <div class="row">
                                <div class="db-info-text">
                                    Additional Fields
                                </div>
                                <div class='db-info-style db-additionalField-id'>
                                </div>
                            </div>
                            <div class="row db-dialog-child-prop-row">
                                <ejs-multiselect id="orgAdditionalField" change="OrgChartPropertyBinding.prototype.orgMultiSelectChange"
                                    mode='Delimiter'>
                                      <e-multiselect-fields value="value" text="text"></e-multiselect-fields>
                                </ejs-multiselect>
                            </div>
                        </div>
                    </div>
                </e-content-template>
            </ejs-tooltip>
        </div>
    </e-content-template>
</ejs-dialog>

<div id="diagramTemplateDiv" class="db-diagram-template-div" style="display: none">
    <div class="db-diagram-template-image-div">
        <div class="db-diagram-template-image">
        </div>
    </div>
    <div class="db-diagram-template-text">
        <span id="diagramTemplateText"></span>
    </div>
</div>

<div id="diagramTemplateDiv1" style="display: none">
    <div class="row">
        <div class="col-xs-3 temp-left-pane">
            <div class="row db-diagram-template-parent-text flowdiagram-template">
                <span>Flow Chart</span>
            </div>
            <div class="row db-diagram-template-parent-text mindmap-template">
                <span>Mind Map</span>
            </div>
            <div class="row db-diagram-template-parent-text orgchart-template">
                <span>Org Chart</span>
            </div>
        </div>
        <div class="col-xs-9 diagramTemplates temp-right-pane" style="padding-left:0px;padding-right:0px">
        </div>
    </div>
</div>
<div style="height: 500px;">
<ejs-dialog id="openTemplateDialog" width="695px" height="470px" header='Create New Diagram' target="#target"
    isModal="true" showCloseIcon='true' allowDragging='true' visible='false'>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
</ejs-dialog>
</div>

<ejs-dialog id="saveDialog" width='335px' header='Save Diagram' target="#target" isModal="true" 
    showCloseIcon='true' allowDragging='true' visible='false' >
    <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="@ViewBag.SaveButton" click="btnSave"></e-dialog-dialogbutton>
            <e-dialog-dialogbutton buttonModel="@ViewBag.CancelClick" click="btnCancelClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="saveDialogContent">
            <div class="row">
                <div class="row">File Name</div>
                <div class="row db-dialog-child-prop-row">
                    <input type="text" id="saveFileName" value="Diagram1">
                </div>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>

<ejs-dialog id="moreShapesDialogContent" width="695px" height="470px" header='Shapes' target='#target' isModal="true"
    showCloseIcon='true' allowDragging='true' visible='false'>
      <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="@ViewBag.moreshapes" click="btnMoreShapes"></e-dialog-dialogbutton>
            <e-dialog-dialogbutton buttonModel="@ViewBag.CancelClick" click="btnCancelClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="moreShapesDialogContent" >
            <div class="row">
                <div class="col-xs-3 temp-left-pane">
                    <ejs-listview id="moreShapesList" dataSource="ViewBag.listViewData" 
                        showCheckBox='true' select="listViewSelectionChange">
                        <e-listview-fieldsettings isChecked="Checked">
                        </e-listview-fieldsettings>
                    </ejs-listview>
                </div>
                <div class="col-xs-9 diagramTemplates temp-right-pane" style="padding-left:0px;padding-right:0px">
                    <img id="shapePreviewImage" src="./css/assets/dbstyle/shapes_images/flow.png" />
                </div>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>

<ejs-dialog id="tooltipDialog" width='335px' header='Edit Tooltip' target='#target' isModal='true'
    visible='false' showCloseIcon='true'>
    <e-dialog-buttons>
        <e-dialog-dialogbutton buttonModel="@ViewBag.tooltipButton " click="btnTooltip"></e-dialog-dialogbutton>
        <e-dialog-dialogbutton buttonModel="@ViewBag.CancelClick" click="btnCancelClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="tooltipDialogContent">
            <div class="row">
                <div>
                    <textarea id="objectTooltip" style="resize: none; width: 100%; height: 120px;"></textarea>
                </div>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>

<ejs-dialog id="hyperlinkDialog" width='400px' header='Insert Link' target="#target" isModal='true' visible='false' showCloseIcon='true'>
    <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="@ViewBag.hyperlink" click="btnHyperLink"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="hyperlinkDialogContent">
            <div class="row">
                <div class="row">Enter URL</div>
                <div class="row db-dialog-child-prop-row">
                    <input type="text" id="hyperlink">
                </div>
            </div>
            <div class="row db-dialog-prop-row">
                <div class="row">Link Text (Optional)</div>
                <div class="row db-dialog-child-prop-row">
                    <input type="text" id="hyperlinkText">
                </div>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>

<div class="db-custom-prop-template" style="display:none">
    <div class="row">
        <div class="col-xs-6 db-col-left" style="width:70%">
            <input class="txtPropertyName" type="text" placeholder="Enter Property Name" style="width:100%; height:27px">
        </div>
        <div class="col-xs-6 db-col-right" style="width:30%">
            <button class="db-custom-prop-button" style="width:100%; text-transform: none;box-shadow: 0 0 0 0">Add Property</button>
        </div>
    </div>
</div>

<div class="db-custom-prop-info-template" style="display:none">
    <div class="row">
        <div class="col-xs-6 db-col-left propertyNameDiv">
        </div>
        <div class="col-xs-6 db-col-right propertyValueDiv">
            <input type="text" class="propertyValue" style="height: 27px" />
        </div>
        <div class="propertyTooltipDiv">
            <input type="checkbox" class="propertyCheckBox" />
        </div>
        <div class="propertyLabelDiv">
            <button class="btnRemoveProperty" style="height: 20px; width: 27px"></button>
        </div>
    </div>
</div>

<div class="db-place-holder" style="display:none">
    <div class="row">
        <input type="checkbox" class="chkPlaceholders" />
    </div>
</div>

<ejs-dialog id="customPropertyDialog" width='500px' header='Additional Information' target="#target"
    isModal='true' allowDragging="true" showCloseIcon='true' visible='false'>
     <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
</ejs-dialog>

<div class="db-layer-template" style="display: none">
    <div class="row">
        <div class="db-layer-content-name">
            <span class="db-layer-name"></span>
            <input type="text" class="db-layer-edit" />
        </div>
        <div class="db-layer-content-btn">
            <button class="db-layer-lock"></button>
        </div>
        <div class="db-layer-content-btn">
            <button class="db-layer-visible"></button>
        </div>
    </div>
</div>

<ejs-dialog id="layerDialog" width='300px' height='400px' header='Layers' target="#target" isModal='true'
    allowDragging="true" visible='false' footerTemplate='<div class="db-layer-bottom-panel"><div class="row" style="margin-top: 6px;"><div class="col-xs-2"><button id="btnAdd" style="right:16px;position:absolute"></button>
    </div><div class="col-xs-2"><button id="btnDuplicate" style="right:14px;position:absolute"></button></div><div class="col-xs-2"><button id="btnRemove" style="right:12px;position:absolute"></button>
    </div><div class="col-xs-2"><button id="btnCloseLayer" style="right:10px;position:absolute"></button></div></div></div>'>
     <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
</ejs-dialog>
<div style="height: 100px;">
<ejs-dialog id="themeDialog" width='174px' header='Themes' target="#target" isModal='false'
    allowDragging="true" visible='false' showCloseIcon='true' position="themesdialogPosition" close='closeThemeDialog'
    created='themeDialogCreated'>
     <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id="themeDialogContent">
            <div class="row">
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme1">
                    </div>
                </div>
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme2">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme3">
                    </div>
                </div>
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme4">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme5">
                    </div>
                </div>
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme6">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme7">
                    </div>
                </div>
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme8">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme9">
                    </div>
                </div>
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme10">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme11">
                    </div>
                </div>
                <div class="db-theme-style-div">
                    <div class="db-theme-style theme12">
                    </div>
                </div>
            </div>
        </div>
    </e-content-template>
</ejs-dialog>
</div>

<ejs-dialog id="deleteConfirmationDialog" width='400px' header='Delete Field' target="#target"
    isModal='true' visible='false'
    showCloseIcon='true'>
    <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="@ViewBag.deleteconfirmation" click="btnDeleteConfirmation"></e-dialog-dialogbutton>
    </e-dialog-buttons>
    <e-dialog-animationsettings effect="None"></e-dialog-animationsettings>
    <e-content-template>
        <div id='deleteConfirmationContent'>
            <span style="font-size: 13px; color: black">
                Please confirm that you want to delete this field?. All data will be lost for this field once you deleted.
            </span>
        </div>
    </e-content-template>
</ejs-dialog>